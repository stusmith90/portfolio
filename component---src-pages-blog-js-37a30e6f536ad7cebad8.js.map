{"version":3,"sources":["webpack:///./src/components/blogItems/BlogItems.js","webpack:///./src/pages/blog.js"],"names":["BlogItems","data","useState","tagData","setTagData","showTags","setShowTags","posts","useEffect","postArray","forEach","post","frontmatter","tags","includes","push","length","title","className","style","listStyle","map","tag","data-id","onClick","e","currentTarget","dataset","id","fields","slug","key","itemScope","itemType","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery","Blog","location","siteTitle","site","siteMetadata","allMarkdownRemark","nodes","dataBlog","setDataBlog","class","type","placeholder","onChange","targetVal","target","value","filterPost","filter","toLowerCase"],"mappings":"kOAoFeA,G,UA/EG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EAEAC,mBAAS,MAAhCC,EAFuB,KAEdC,EAFc,OAGEF,mBAAS,IAAlCG,EAHuB,KAGbC,EAHa,KAKxBC,EAAQN,EAgBd,OAdAO,qBAAU,WACR,IAAMC,EAAY,GAClBH,EAAYC,GACZA,EAAMG,SAAQ,SAAAC,GACMA,EAAKC,YAAYC,KACrBC,SAASX,IACrBM,EAAUM,KAAKJ,MAGfF,EAAUO,QACZV,EAAYG,KAEb,CAACF,EAAOJ,IAEa,IAApBE,EAASW,OAET,oCACE,kBAAC,IAAD,CAAKC,MAAM,cACX,yLASJ,yBAAKC,UAAU,0BACb,wBAAIC,MAAO,CAAEC,UAAU,SACrB,yBAAKF,UAAU,QAhCR,CAAC,MAAO,KAAM,MAAO,SAiCpBG,KAAI,SAAAC,GAAG,OACX,wBAAIC,UAASD,EAAKE,QAAS,SAACC,GAAD,OAAOrB,EAAWqB,EAAEC,cAAcC,QAAQC,MAClEN,OAINjB,EAASgB,KAAI,SAAAV,GACZ,IAAMM,EAAQN,EAAKC,YAAYK,OAASN,EAAKkB,OAAOC,KACpD,OACE,oCACE,wBAAIC,IAAKpB,EAAKkB,OAAOC,MACnB,6BACEZ,UAAU,iBACVc,WAAS,EACTC,SAAS,6BAET,gCACE,4BACE,kBAAC,OAAD,CAAMC,GAAIvB,EAAKkB,OAAOC,KAAMK,SAAS,OACnC,0BAAMA,SAAS,YAAYlB,KAG/B,+BAAQN,EAAKC,YAAYwB,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQ3B,EAAKC,YAAY2B,aAAe5B,EAAK6B,SAE/CL,SAAS,2BCtBlBM,GAFEC,UAvCF,SAAC,GAAwB,IAAD,EAArBzC,EAAqB,EAArBA,KAAM0C,EAAe,EAAfA,SACdC,GAAY,UAAA3C,EAAK4C,KAAKC,oBAAV,eAAwB7B,QAAxB,QACZV,EAAQN,EAAK8C,kBAAkBC,MAFF,EAIH9C,mBAASK,GAAlC0C,EAJ4B,KAIlBC,EAJkB,KAgBnC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAU1B,MAAO2B,GACjC,kBAAC,IAAD,CAAK3B,MAAM,cACX,yBAAKC,UAAU,OACb,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,OACb,kBAAC,OAAD,CAAMgB,GAAG,KAAT,QACA,kBAAC,OAAD,CAAMA,GAAG,SAAT,SAEA,yBAAKiB,MAAM,cACX,oCACA,mEACA,2BAAOC,KAAK,OAAOC,YAAY,SAASC,SAtB7B,SAAA7B,GACjB,IAAM8B,EAAY9B,EAAE+B,OAAOC,MACrBC,EAAanD,EAAMoD,QAAO,SAAAhD,GAC9B,OAAOA,EAAKC,YAAYK,MACrB2C,cACA9C,SAASyC,EAAUK,kBAExBV,EAAYQ,QAkBR,yBAAKxC,UAAU,gBACb,kBAAC,EAAD,CAAWjB,KAAMgD,QASL","file":"component---src-pages-blog-js-37a30e6f536ad7cebad8.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../layout\"\nimport SEO from \"../seo\"\n\nconst BlogItems = ({ data }) => {\n\n  const [tagData, setTagData] = useState(null)\n  const [showTags, setShowTags] = useState([])\n  const tags = [\"All\", \"JS\", \"PHP\", \"REACT\"]\n  const posts = data\n\n  useEffect(() => {\n    const postArray = []\n    setShowTags(posts)\n    posts.forEach(post => {\n      const tagsPosts = post.frontmatter.tags\n      if (tagsPosts.includes(tagData)) {\n        postArray.push(post)\n      }\n    })\n    if (postArray.length) {\n      setShowTags(postArray)\n    }\n  }, [posts, tagData])\n\n  if (showTags.length === 0) {\n    return (\n      <>\n        <SEO title=\"All posts\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </>\n    )\n  }\n  return (\n    <div className=\"RightSection_Container\">\n      <ol style={{ listStyle: `none` }}>\n        <div className=\"tags\">\n          {tags.map(tag => (\n            <li data-id={tag} onClick={(e) => setTagData(e.currentTarget.dataset.id)}>\n              {tag}\n            </li>\n          ))}\n        </div>\n        {showTags.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          return (\n            <>\n              <li key={post.fields.slug}>\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h2>\n                    <small>{post.frontmatter.date}</small>\n                  </header>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </li>\n            </>\n          )\n        })}\n      </ol>\n    </div>\n  )\n}\n\nexport default BlogItems\n","import React, { useEffect, useState } from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"../App.scss\"\nimport BlogItems from \"../components/blogItems/BlogItems\"\n\nconst Blog = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  const [dataBlog, setDataBlog] = useState(posts);\n\n  const blogChange = e => {\n    const targetVal = e.target.value\n    const filterPost = posts.filter(post => {\n      return post.frontmatter.title\n        .toLowerCase()\n        .includes(targetVal.toLowerCase())\n    })\n    setDataBlog(filterPost);\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <div className=\"App\">\n        <div className=\"Sidebar__container\">\n        <div className=\"nav\">\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/blog\">Blog</Link>\n          </div>\n          <div class=\"TopContent\">\n          <h1>Blog</h1>\n          <p>Documenting new skills and findings.</p>\n          <input type=\"text\" placeholder=\"Search\" onChange={blogChange}></input>\n        </div>\n        </div>\n        <div className=\"RightSection\">\n          <BlogItems data={dataBlog} />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Blog\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/blogInItems/BlogInItems.js","webpack:///./src/templates/blog-post.js"],"names":["blogInItems","post","previous","next","className","itemScope","itemType","itemProp","frontmatter","title","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery","BlogPostTemplate","data","location","markdownRemark","siteTitle","site","siteMetadata","console","log","description","excerpt","tags","join","BlogInItems"],"mappings":"qNAoDeA,EAjDK,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,KAClC,OACI,yBAAKC,UAAU,gBACf,6BACEA,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,gCACE,wBAAIC,SAAS,YAAYN,EAAKO,YAAYC,OAC1C,2BAAIR,EAAKO,YAAYE,OAEvB,6BACEC,wBAAyB,CAAEC,OAAQX,EAAKY,MACxCN,SAAS,gBAEX,6BACA,kCAEF,yBAAKH,UAAU,iBACb,wBACEU,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGjB,GACC,kBAAC,OAAD,CAAMkB,GAAIlB,EAASmB,OAAOC,KAAMC,IAAI,QAApC,KACKrB,EAASM,YAAYC,QAI9B,4BACGN,GACC,kBAAC,OAAD,CAAMiB,GAAIjB,EAAKkB,OAAOC,KAAMC,IAAI,QAC7BpB,EAAKK,YAAYC,MADpB,WCFHe,GAFEC,UA9BU,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1B1B,EAAOyB,EAAKE,eACZC,GAAY,UAAAH,EAAKI,KAAKC,oBAAV,eAAwBtB,QAAxB,QACVP,EAAmBwB,EAAnBxB,SAAUC,EAASuB,EAATvB,KAGlB,OAFA6B,QAAQC,IAAIhC,GAGV,kBAAC,IAAD,CAAQ0B,SAAUA,EAAUlB,MAAOoB,GACjC,kBAAC,IAAD,CACEpB,MAAOR,EAAKO,YAAYC,MACxByB,YAAajC,EAAKO,YAAY0B,aAAejC,EAAKkC,UAEpD,yBAAK/B,UAAU,OACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,OACb,kBAAC,OAAD,CAAMgB,GAAG,KAAT,QACA,kBAAC,OAAD,CAAMA,GAAG,SAAT,SAEF,yBAAKhB,UAAU,cACf,4BAAKH,EAAKO,YAAYC,OACtB,8CAAoBR,EAAKO,YAAYE,MACrC,uCAAa,YAAIT,EAAKO,YAAY4B,MAAMC,KAAK,QAG/C,kBAACC,EAAD,CAAarC,KAAMA,EAAMC,SAAUA,EAAUC,KAAMA,OAQrC","file":"component---src-templates-blog-post-js-cbb7477abcf459ca003b.js","sourcesContent":["import React from 'react';\nimport { Link } from \"gatsby\"\n\nconst blogInItems = ({post, previous, next}) => {\n    return (\n        <div className=\"RightSection\">\n        <article\n          className=\"blog-post\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <header>\n            <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n            <p>{post.frontmatter.date}</p>\n          </header>\n          <section\n            dangerouslySetInnerHTML={{ __html: post.html }}\n            itemProp=\"articleBody\"\n          />\n          <hr />\n          <footer></footer>\n        </article>\n        <nav className=\"blog-post-nav\">\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </div>\n    );\n};\n\nexport default blogInItems;","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport BlogInItems from \"../components/blogInItems/BlogInItems\";\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  console.log(post)\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div className=\"App\">\n        <div className=\"Sidebar__container\">\n          <div className=\"nav\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/blog\">Blog</Link>\n          </div>\n          <div className=\"TopContent\">\n          <h1>{post.frontmatter.title}</h1>\n          <date>Date Posted: {post.frontmatter.date}</date>\n          <tags>Tags: {[...post.frontmatter.tags].join(\",\")}</tags>\n          </div>\n        </div>\n        <BlogInItems post={post} previous={previous} next={next}/>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}